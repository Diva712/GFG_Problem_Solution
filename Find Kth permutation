Given two integers N and K. Find the kth permutation sequence of first N natural numbers.

 

Example 1:

Input: 4 3
Output: 1324
Explanation: 
Permutations of first 4 natural numbers:
1234,1243,1324,1342,1423,1432.....
So the 3rd permutation is 1324. 
Example 2:

Input: 3 5
Output: 312
Explanation: 
Permutations of first 3 natural numbers:
123,132,213,231,312,321.
So the 5th permutation is 312. 
Your Task:
You don't need to read input or print anything. Your task is to complete the function kthPermutation() which takes two integers N and K as input parameters and returns an string denoting the kth permutation.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)

############
soltuion
//{ Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution
{
public:
    string kthPermutation(int n, int k)
    {
        // code here
        int fact = 1;
        string ans = "";
        vector<int>num;
        for(int i =1 ; i<n ; i++){
            fact = fact*i;
            num.push_back(i);
        }
        num.push_back(n);
        k = k-1;
        while(true){
            ans = ans + to_string(num[k/fact]);
            num.erase(num.begin()+k/fact);
            if(num.size()==0){
                break;
            }
            k = k%fact;
            fact = fact/num.size();
        }
        return ans;
    }
};

//{ Driver Code Starts.

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n, k;
        cin >> n >> k;
        Solution ob;
        string ans = ob.kthPermutation(n, k);
        cout << ans;
        cout << "\n";
    }
    return 0;
}

// } Driver Code Ends
