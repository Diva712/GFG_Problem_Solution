Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"

###########
solution
class Solution {
public:
    bool isvowel(char a){
        return (a == 'a'|| a=='e' || a=='i' || a=='o' || a=='u' || a=='A' || a=='E' || a=='I' || a=='O' || a=='U');
    }
    string reverseVowels(string s) {
        int n = s.length();
        int i = 0;
        int j = n-1;
        while(i<j){
            while(i<j && !isvowel(s[i])){
                i++;
            }
            while(j>i && !isvowel(s[j])){
                j--;
            }
            swap(s[i] , s[j]);
            i++;
            j--;
        }
        return s;
        
    }
};
